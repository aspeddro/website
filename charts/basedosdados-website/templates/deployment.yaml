apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.website.name }}
  labels:
    app.kubernetes.io/component: basedosdados-website
    app.kubernetes.io/name: {{ .Values.website.name }}
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  replicas: {{ .Values.website.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
  selector:
    matchLabels:
      app.kubernetes.io/component: basedosdados-website
      app.kubernetes.io/name: {{ .Values.website.name }}
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app.kubernetes.io/component: basedosdados-website
        app.kubernetes.io/name: {{ .Values.website.name }}
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
    spec:
      containers:
        - name: basedosdados-website
          image: "{{ .Values.website.image.name }}:{{ .Values.website.image.tag }}"
          imagePullPolicy: {{ .Values.website.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 3000
          env:
            {{- with .Values.website.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.website.envFrom }}
          envFrom:
              {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.website.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
      restartPolicy: Always
